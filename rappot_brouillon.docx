problème d'affichage des pages selon accès (accès direct donne un affichage correct alors que via index.php on avait pas de mise en page)
solution1: créer des références absolues (pas trop efficace)
solution2 : définir dynamiquement une URL de base (ça n'a rien changé)
solution3 : tout recommencer et passer par des routes (on a des nouveaux problèmes dus à des chargments de liens étranges)
solution4 : mieux ranger les différents fichiers pour faciliter leur accès (ça marche).

problème de récupération des données depuis la base des données (probablement dû au fichier index.php)
solution1 : modification du fichier index.php + reimplémentation du fichier routes.php + adaptation du fichier connect.php à partir d'un fichiers de l'année précédente
remarque1 : utiliser route.page_demandée n'est pas une bonne approche ni path('page_demandée') d'ailleur

problème pour associer chaque entreprise à la spécialité qui la concerne
solution : une fonction php qui récupère les spécialités pour chaque entreprise et les ajoute à la table à afficher avec GROUP_CONCAT
remarque : faudrait requerir au moins une fois dans index.php les controleurs avant de charger les pages sinon c'est pas très wow

ajout de model.php pour regrouper toutes les fonctions php

problème qui affiche en double les pages
solution1 : redifinir les données initiales comme un tableau vide qui se remplie lorsque je demanade la page selon le nom .php

problème après avoir ajouter la fonction d'ajouter un étudiant : apparament le fait de définir la supression avant l'ajout pose problème de conflit
solution1 : utiliser des "if" dans le controleur et définir le type d'action dans twig si éliminer et dans js si ajouter

problème pour récupérer les différentes specialités lors de l'ajout d'une entreprise
solution1 : à l'aide de l'intelligence artificielle nous avons pu coder une fonction en javascript qui récupère les spécialités et les affiche dans une liste déroulante

problème "Erreur lors de l'inscription: Unexpected token '<', "<!DOCTYPE "... is not valid JSON" lorsque je définis la fonction hideSuccessMessage() dans le fichier javascript.js
solution1 : inclure la fonction dans le fichier Inscription.twig (c'est moche)
solution2 : nettoyer le code du fichier javascript.js car il avait des anciens bouts de codes qui causaient des conflits

problème pour inclure aussi la spécialité lors de l'ajout d'une entreprise
solution1 : appeler une fonction qui récupère l'identifiant de la nouvelle entreprise à partir de son nom, puis appeler une fonction qui recupère le numero de la spécialité à partir de son nom et definir une fonction qui ajoute ces données à la table spec_entreprise (ça bug)
solution2 : chatGPT